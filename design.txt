This is supposed to be MOO, much as possible. Sacrifices in accuracy will probably be made at some point in the interest of fun, of originality, of including MOO2 features, and of updating the game. Sacrifices in accuracy will be made early on because i'm going to build this first as I remember moo; This is not a direct dissassembley port, but based on my experiences with playing, the manual (Acquired from Abandonia, http://www.abandonia.com/en/games/101/Master+of+Orion.html), Sirian's excellent MoO site (http://sirian.warpcore.org/moo1/index.html), and probably playtest suggestions.

There's two major components to Moo; The Galaxy Map, and the tactical ship combat section. They're pretty much independant; It even looks like they may be seperate executables, in the original game. It's on the list of things to do to create a seperate '1+2' version, using the galaxy from 1 and the ship combat of 2. Later.

MoO is a boardgame; Just a little too complex for a physical board, but it could be done. On the galaxy map, orders are planned, and then executed simultaneously. At the end of that, if there is combat to resolve, the game enters tactical mode to resolve it. Once the turn is over, the game goes back to the galaxy map to plot the next phases orders.

Order Execution:
Planetary production
Racial production
Racial spending
Planetary spending
Ship Movement
Combat


Planetary Production:
The planet list is cycled through, Planetary production is calculated, and
accounted for in the racial treasury. Production: 1/2 the # of colonists, rounded up + the number of factories that
they operate. There's a little more to it; I'm noticing a discrepancy on the
homeworld that seems = the number of worlds controlled (it was 1, went up to 2
and 3 roughtly the times I got those colonies up, but that's not necessarially
it. 

Racial production: 
Each race is cycled through, and the taxes are caclulated; Ships, spies,
reserve, as well as trade bonuses. Based on the racial treasury, the the total
of the 'tax' is then calculated, and deducted from each planet;

Algorithm:
total racial production
total racial 'tax' (including trade), with trade it may be negative!
sort (planets, production)
for (planets);
planet.production -= floor(planet.production / race.production * race.tax)
race.paid += floor(planet.production / race.production * race.tax)
next planet
//fix the flooring error
while paid >0
   planet.production -=1
   paid +=1
   next planet

